name: CI

on:
  push:
    branches:
      - master
      - next
      - test/gh-actions

  pull_request:
    branches:
      - '**'

jobs:
  Lint:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install
        shell: bash

      - name: Run lint
        run: yarn lint

  UnitTest:
    needs: Lint
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-11.0, windows-2019]
        node-version: [10.x, 12.x, 14.x]
      max-parallel: 3

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }} # we want to skip this on windows
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --ignore-engines

      - name: Run tests with coverage
        run: yarn test:coverage --ci --reporters="default" --reporters="jest-junit"

      - name: Publish code coverage report
        uses: codecov/codecov-action@v1
        with:
          name: codecov
